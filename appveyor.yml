version: 1.0.{build}
branches:
  only:
    - master
clone_folder: C:\projects\google-cloud-powershell
environment:
  Path: C:\Tools\NUnit3;$(Path)
  ENCRYPTION_KEY:
    secure: wR1u+Zd4yeQYm0EcoypygXKhUDXMAGCmNIR/pC/juWU=
  matrix:
    - test_folder: ""
    - test_folder: "PubSub"
    - test_folder: "Logging"
    - test_folder: "Storage"
    - test_folder: "Dns"
    - test_folder: "Provider"
    - test_folder: "BigQuery"
    - test_folder: "Compute"
    - test_folder: "Compute2"
    - test_folder: "SQL"
    - test_folder: "SQL2"
    - test_folder: "SQL3"
    - test_folder: "Container"
    - test_folder: "Container2"
matrix:
  exclude:
    - APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH: master
before_build:
  - nuget restore
  # Install Pester.
  - cinst -y pester
  - choco install opencover.portable
  - choco install codecov
  # Unencrypt the service account credentials.
  - ps: |
      if ($env:ENCRYPTION_KEY) {
          nuget install secure-file -ExcludeVersion
          secure-file\tools\secure-file -decrypt "Google.PowerShell.IntegrationTests\ServiceAccountCredentials.json.enc" -secret $env:ENCRYPTION_KEY
          secure-file\tools\secure-file -decrypt "Google.PowerShell.IntegrationTests\AdditionalServiceAccountCredentials.json.enc" -secret $env:ENCRYPTION_KEY
          # Install Google Cloud SDK and set up the credentials.
          . "C:\projects\google-cloud-powershell\Google.PowerShell.IntegrationTests\GcloudCmdlets.ps1"; Install-CloudSdk
          Copy-Item "Google.PowerShell.IntegrationTests\ServiceAccountCredentials.json" "$env:APPDATA\gcloud\ServiceAccountCredentials.json"
          $env:GOOGLE_APPLICATION_CREDENTIALS = "$env:APPDATA\gcloud\ServiceAccountCredentials.json"
          Start-Process -FilePath gcloud -ArgumentList "auth activate-service-account --key-file=`"$env:GOOGLE_APPLICATION_CREDENTIALS`"" -NoNewWindow -ErrorAction Ignore
      }

  # We have to remove the generating comments part from the build to avoid permission being denied when running the executables.
  - ps: (Get-Content -Raw "C:\projects\google-cloud-powershell\Google.PowerShell\Google.PowerShell.csproj").Replace('"$(SolutionDir)\third_party\XmlDoc2CmdletDoc\XmlDoc2CmdletDoc.exe" "$(TargetPath)"', "") | Out-File "C:\projects\google-cloud-powershell\Google.PowerShell\Google.PowerShell.csproj" -Encoding utf8

build:
  project: C:\projects\google-cloud-powershell\Google.PowerShell\Google.PowerShell.csproj
  verbosity: minimal

test_script:
  - ps: |
      if ($env:test_folder) {
          if($env:ENCRYPTION_KEY) {
              . "C:\projects\google-cloud-powershell\Google.PowerShell.IntegrationTests\GcloudCmdlets.ps1"; Start-PesterTest
          }
      } else {
          msbuild "C:\projects\google-cloud-powershell\Gooogle.PowerShell.Tests\Google.PowerShell.Tests.csproj"
          .\TestScript.ps1
      }
after_test:
  - ps: |
      if (Test-Path codecoverage.xml) {
          codecov -f codecoverage.xml
      }
